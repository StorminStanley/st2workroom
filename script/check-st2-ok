#!/usr/bin/env sh

LOG_FILE=/var/log/puppet.log

DIR=$( dirname "$(readlink -f "$0")" )
. $DIR/shared-functions

if [ -f /etc/profile.d/st2.sh ]; then
  . /etc/profile.d/st2.sh
fi

retry_message() {
    ST2_DATACENTER=`facter datacenter`
    if [ "$ST2_DATACENTER" = "vagrant" ]; then
        KICK_COMMAND="vagrant provision st2"
    else
        if [ -e /usr/bin/update-system ]; then
          KICK_COMMAND="update-system"
        else
          KICK_COMMAND="curl -sSL http://stackstorm.com/install.sh | sudo sh"
        fi
    fi

    echo ""
    echo "OH NOES!"
    echo "Don't worry! Occasionally something goes wrong, and you just have"
    echo "to kick the tires a bit. Try re-provisioning by executing the command:"
    echo ""
    echo "DEBUG=1 ${KICK_COMMAND}"
    echo ""
    echo "If you don't happen to get the 'OK' after that, give us a shout!"
    echo "Please also make sure to check and forward us the ${LOG_FILE} log file."
    echo "This file should include more information which will help us"
    echo "troubleshoot this issue."
    echo "We don't want to leave you hanging! Come find your favorite way to"
    echo "contact us, and we'll get you going faster than you can say..."
    echo "AUTOMATE ALL THE THINGS!"
    echo
    echo "Email: support@stackstorm.com"
    echo "IRC: irc.freenode.net/#stackstorm"
    echo "Slack: http://stackstorm.com/community-signup"
    echo
}

prompt_for_credentials() {
    echo ""
    echo "Things are looking promising! We've installed all the things, and need to"
    echo "run a bit of a self-diagnostic to make sure everything is setup properly"
    echo ""
    echo "Looks like you've installed via sudo, and not as the root user (Good for you!)"
    echo "You will need to enter the password for the user ${USER} below. This will run:"
    echo ""
    echo "st2 auth ${USER} -t"
    echo ""
    echo "This command generates a token for you. This command will use the configured"
    echo "authentication integration (Typically PAM or LDAP auth). This depends on how"
    echo "on how you have installed/configured the system. You can learn more about these"
    echo "topics at:"
    echo ""
    echo "  * Tokens - http://docs.stackstorm.com/cli.html"
    echo "  * Authentication - http://docs.stackstorm.com/config/authentication.html"
    echo ""
    echo "Otherwise, please enter your password now..."
}

ok_message() {
    ST2_IP=`facter st2_ip`
    ST2_FQDN=`facter fqdn`

    echo ""
    echo ""
    echo "███████╗████████╗██████╗      ██████╗ ██╗  ██╗";
    echo "██╔════╝╚══██╔══╝╚════██╗    ██╔═══██╗██║ ██╔╝";
    echo "███████╗   ██║    █████╔╝    ██║   ██║█████╔╝ ";
    echo "╚════██║   ██║   ██╔═══╝     ██║   ██║██╔═██╗ ";
    echo "███████║   ██║   ███████╗    ╚██████╔╝██║  ██╗";
    echo "╚══════╝   ╚═╝   ╚══════╝     ╚═════╝ ╚═╝  ╚═╝";
    echo ""
    echo "  st2 is installed and ready to use."
    echo ""
    echo "First time starting this machine up?"
    echo "Visit https://${ST2_IP}/setup to configure StackStorm"
    echo "Otherwise, head to https://${ST2_FQDN} to access the WebUI"
    echo ""
    echo "If you would like to use the CLI interface, you will need"
    echo "to ensure that StackStorm environment variables are properly"
    echo "set. You can do this by logging out and logging back in, or"
    echo "running the command:"
    echo ""
    echo ". /etc/profile.d/st2.sh"
    echo ""
    echo "Don't forget to dive into our documentation! Here are some resources"
    echo "for you:"
    echo ""
    echo "* Documentation  - https://docs.stackstorm.com"
    echo "* Knowledge Base - https://stackstorm.reamaze.com"
    echo ""
    echo "Thanks for installing StackStorm! Come visit us in our Slack Channel"
    echo "and tell us how it's going. We'd love to hear from you!"
    echo "http://stackstorm.com/community-signup"
}

# Only run the check for StackStorm in the event that it actually exists
if [ -f /usr/bin/st2 ]; then
  # Check to see if the current user is root, and if not, have them authenticate
  if [ "${USER}" != 'root' ] || [ ! -n $ST2_AUTH_TOKEN ]; then
    prompt_for_credentials
    export ST2_AUTH_TOKEN=$(st2 auth $USER -t)
  fi

  # Run the actual check
  st2 run core.local date &> /dev/null
  if [ $? -eq 0 ]; then
    ok_message
    exit 0
  else
    retry_message
    exit 1 # Failure with the self-check
  fi
else
  retry_message
  exit 2 # StackStorm is not installed on the system
fi
